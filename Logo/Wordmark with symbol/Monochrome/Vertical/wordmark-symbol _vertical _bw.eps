%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.11.6 (Build 15G31) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 650 825
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 650 825
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 825 m
650 825 l
650 0 l
0 0 l
0 825 l
h
0 825 m
W*
0 0 650 825 rc
-5 830 m
655 830 l
655 -5 l
-5 -5 l
h
f
Q
1 1 1 sc
q
96.672897 129.03442 m
78.168221 129.03442 63.158878 132.21304 50.308411 138.36522 c
54.214954 167.89565 l
67.785049 161.2308 83.102806 158.05217 95.95327 158.05217 c
105.30841 158.05217 111.47664 161.2308 111.47664 166.87029 c
111.47664 183.07101 52.981308 179.17464 52.981308 221.52209 c
52.981308 248.59166 77.85981 262.84421 109.00935 262.84421 c
124.53271 262.84421 140.5701 258.64023 150.95328 254.94891 c
146.73831 225.93115 l
135.84113 230.13515 121.03738 234.03152 108.70094 234.03152 c
101.09346 234.03152 94.925232 231.36559 94.925232 226.44385 c
94.925232 210.44818 154.65421 213.62682 154.65421 172.3047 c
154.65421 144.825 130.18692 129.03442 96.672897 129.03442 c
96.672897 129.03442 l
h
96.672897 129.03442 m
W*
0 0 650 825 rc
45.308411 267.84421 m
159.65421 267.84421 l
159.65421 124.03442 l
45.308411 124.03442 l
h
f
Q
q
258.38318 131.8029 m
258.38318 204.91122 l
258.38318 221.62463 250.98131 229.51993 236.8972 229.51993 c
230.00934 229.51993 222.81308 227.57173 217.87851 224.59819 c
217.87851 131.8029 l
174.49533 131.8029 l
174.49533 258.53769 l
216.95328 262.02393 l
215.92523 241.3116 l
217.36449 241.3116 l
226.51402 253.61594 242.03738 262.94675 260.54205 262.94675 c
282.74765 262.94675 301.97195 249.20688 301.97195 216.7029 c
301.97195 131.8029 l
258.38318 131.8029 l
258.38318 131.8029 l
h
258.38318 131.8029 m
W*
0 0 650 825 rc
169.49533 267.94675 m
306.97195 267.94675 l
306.97195 126.8029 l
169.49533 126.8029 l
h
f
Q
q
545.10278 131.8029 m
510.35513 192.09421 l
506.8598 192.09421 l
506.8598 131.8029 l
463.47662 131.8029 l
463.47662 281.91595 l
506.8598 349.58984 l
506.8598 209.52536 l
515.4953 220.08659 544.58881 260.17825 544.58881 260.17825 c
598.14954 260.17825 l
547.3645 206.55182 l
599.89722 131.70036 l
545.10278 131.70036 l
545.10278 131.8029 l
h
545.10278 131.8029 m
W*
0 0 650 825 rc
458.47662 354.58984 m
604.89722 354.58984 l
604.89722 126.70036 l
458.47662 126.70036 l
h
f
Q
q
407.24298 259.76813 m
389.45795 201.93768 l
385.96262 191.06885 382.5701 171.07428 382.5701 171.07428 c
382.5701 171.07428 379.89719 191.78659 376.19626 202.65544 c
357.17758 259.76813 l
308.55139 259.76813 l
361.39252 131.8029 l
354.19626 114.78188 343.09344 100.42681 328.28973 100.42681 c
325.61682 100.42681 322.94394 100.52935 320.37384 100.83696 c
303.10281 74.177536 l
303.10281 74.177536 l
308.55139 71.101448 318.93457 67.922829 331.27103 67.922829 c
363.34579 67.922829 384.83179 93.864494 399.84113 132.21304 c
450.21497 259.76813 l
407.24298 259.76813 l
407.24298 259.76813 l
h
407.24298 259.76813 m
W*
0 0 650 825 rc
298.10281 264.76813 m
455.21497 264.76813 l
455.21497 62.922825 l
298.10281 62.922825 l
h
f
Q
q
395.7677 769.63855 m
397.7861 765.90594 l
402.19479 757.78058 440.77859 685.7807 440.77649 659.7674 c
440.77649 658.24231 l
423.28461 611.37189 l
426.12851 585.8233 431.78479 530.31079 427.51474 519.46521 c
424.87878 512.75696 414.83063 498.95663 406.2359 487.7811 c
401.72437 487.77213 l
406.39697 444.84738 l
392.31042 434.66049 l
386.54141 487.74185 l
381.38885 487.7316 l
380.88022 486.00565 380.32407 484.30756 379.71576 482.65625 c
376.4888 473.88766 370.78641 467.24286 363.49261 463.30701 c
363.06531 442.28607 343.49921 430.94522 325.064 430.94522 c
306.47592 430.94522 286.74588 442.27695 286.31119 463.29059 c
279.00269 467.23373 273.29291 473.87854 270.06229 482.65625 c
269.48108 484.23642 268.9469 485.85855 268.45584 487.5065 c
263.41635 487.49646 l
257.62604 434.09537 l
243.53946 443.93222 l
248.25862 487.46625 l
243.82689 487.45743 l
235.16496 498.68277 224.92355 512.68848 222.26239 519.47144 c
217.99232 530.31909 223.42809 585.8233 226.27618 611.37604 c
208.46715 658.24023 l
208.46715 659.7674 l
208.46715 685.7807 247.35971 757.78058 251.77469 765.90594 c
252.12979 766.54907 l
256.37906 774.88818 259.68457 781.01074 260.7406 782.95801 c
271.78625 803 l
271.78625 803 281.87415 733.34705 281.86679 733.2851 c
287.30582 695.65668 l
292.39206 653.97681 l
298.56384 655.922 307.22705 658.17194 316.52191 659.09546 c
319.05441 665.3042 321.80389 669.45013 324.82825 669.45013 c
330.62567 669.45013 336.40363 663.86945 341.60165 657.9068 c
347.33594 656.86688 352.55896 655.47467 356.73746 654.18933 c
362.46854 695.65485 l
377.96414 803 l
388.7814 782.95801 l
389.70096 781.26007 392.31589 776.38733 395.7677 769.63855 c
h
395.7677 769.63855 m
W*
0 0 650 825 rc
203.46715 808 m
445.77649 808 l
445.77649 425.94522 l
203.46715 425.94522 l
h
f
Q
q
324.99893 326.37112 m
172 434.32208 l
172 686.05225 l
172 686.05225 228.57289 707.05493 325.20685 707.05493 c
421.84082 707.05493 478 686.05225 478 686.05225 c
478 434.32208 l
324.99893 326.37112 l
h
324.99893 326.37112 m
W*
0 0 650 825 rc
167 712.05493 m
483 712.05493 l
483 321.37112 l
167 321.37112 l
h
f
Q
0 0 0 sc
q
435.01007 687.83862 m
437.79462 679.09772 439.55847 671.31024 439.55847 665.54236 c
439.55847 663.1806 l
423.05539 618.77991 l
426.89627 583.73138 430.54489 540.36719 426.49393 529.96875 c
424.49225 524.82587 418.46735 515.54303 408.65704 502.43863 c
419.30368 404.05576 l
468.33929 439.1973 l
468.33929 678.75354 l
468.33929 678.75354 456.69379 683.16455 435.01007 687.83862 c
435.01007 687.83862 l
h
435.01007 687.83862 m
W*
0 0 650 825 rc
403.65704 692.83862 m
473.33929 692.83862 l
473.33929 399.05576 l
403.65704 399.05576 l
h
f
Q
q
294.48306 665.39996 m
302.7019 667.90216 313.68744 670.38458 324.90289 670.38458 c
336.14014 670.38458 347.19702 667.88831 355.45749 665.38611 c
360.55292 673.74915 l
363.95181 697.48541 l
363.95181 697.48541 340.20297 698.74542 325.16846 698.74542 c
311.18829 698.74542 298.12573 698.26477 285.99863 697.45776 c
289.40152 673.74915 l
294.48306 665.39996 l
294.48306 665.39996 l
h
294.48306 665.39996 m
W*
0 0 650 825 rc
280.99863 703.74542 m
368.95181 703.74542 l
368.95181 660.38611 l
280.99863 660.38611 l
h
f
Q
q
223.45453 529.9707 m
219.4016 540.36523 223.05618 583.72937 226.89705 618.77795 c
210.39397 663.17859 l
210.39397 665.54041 l
210.39397 671.2984 212.14792 679.07599 214.9285 687.80304 c
193.24477 683.13885 181.60719 678.75159 181.60719 678.75159 c
181.60719 439.19138 l
230.839 403.91138 l
241.46782 502.19333 l
231.55447 515.42633 225.46812 524.79224 223.45453 529.9707 c
223.45453 529.9707 l
h
223.45453 529.9707 m
W*
0 0 650 825 rc
176.60719 692.80304 m
246.46782 692.80304 l
246.46782 398.91138 l
176.60719 398.91138 l
h
f
Q
q
418.92911 532.90015 m
421.57889 539.71442 420.05679 571.92651 414.84842 619.08057 c
414.7731 619.79865 l
431.43674 664.63446 l
431.43674 665.54236 l
431.43674 685.10498 406.10437 737.45135 391.1293 765.29205 c
383.8241 778.883 l
368.34763 670.95819 l
359.05658 655.69379 l
356.74573 656.46716 l
350.27487 658.63513 337.53934 662.27661 324.90091 662.27661 c
312.9165 662.27661 301.04901 659.12762 293.19681 656.48102 c
290.89386 655.69775 l
281.59689 670.95618 l
266.11841 778.88104 l
258.81519 765.29004 l
243.8421 737.4494 218.50578 685.10699 218.50578 665.54041 c
218.50578 664.63245 l
235.17734 619.79663 l
235.09807 619.07861 l
229.88969 571.92456 228.36365 539.7204 231.01738 532.90607 c
233.39761 526.79205 242.85315 513.71332 250.77075 503.31488 c
239.36307 397.7973 l
250.73309 389.65775 l
261.35199 487.88828 l
261.57993 480.26697 262.53717 464.35577 266.41766 449.76785 c
259.25516 383.54764 l
324.96829 336.45291 l
403.85495 392.98279 l
410.76971 397.93973 l
399.34619 503.54828 l
407.23602 513.91113 416.56473 526.83557 418.92911 532.90015 c
418.92911 532.90015 l
h
391.17688 736.52167 m
403.95999 710.55817 417.37332 679.73267 418.29294 666.86365 c
411.12845 647.58783 l
393.9079 671.75531 388.49936 711.0329 388.04153 714.62299 c
391.17688 736.52167 l
391.17688 736.52167 l
h
370.45831 592.7215 m
385.93283 592.7215 374.35669 579.60718 373.00107 578.12567 c
343.73071 578.12567 l
346.39636 581.45068 356.46826 592.7215 370.45831 592.7215 c
370.45831 592.7215 l
h
362.11264 565.672 m
361.88672 564.04608 360.49741 562.87311 358.90201 562.85138 c
359.37369 560.71509 361.11575 558.99817 363.41077 558.67377 c
366.36774 558.25641 369.10272 560.31952 369.51099 563.27466 c
369.81619 565.44257 368.77771 567.47992 367.03165 568.57379 c
376.32269 568.57379 l
376.32269 568.11487 l
376.32269 561.3797 370.85471 555.91644 364.10641 555.91644 c
357.35812 555.91644 351.89011 561.37775 351.89011 568.11487 c
351.89011 568.57379 l
361.31393 568.57379 l
361.26242 568.54016 361.22079 568.49072 361.16531 568.45709 c
361.87085 567.74896 362.26129 566.74414 362.11264 565.672 c
362.11264 565.672 l
h
332.1843 423.28214 m
333.97592 422.10522 335.8587 421.15576 337.82474 420.41003 c
334.73102 416.88916 330.47592 415.11093 324.97226 415.11093 c
319.46857 415.11093 315.21548 416.89313 312.12177 420.41995 c
314.08975 421.16565 315.97849 422.11905 317.77011 423.30191 c
320.28314 421.22696 323.09146 421.18939 324.97424 421.18939 c
326.86496 421.18939 329.6713 421.20325 332.1843 423.28214 c
332.1843 423.28214 l
h
283.84235 565.672 m
283.61642 564.04608 282.2291 562.87311 280.63568 562.85138 c
281.10934 560.71509 282.84546 558.99817 285.14246 558.67377 c
288.09744 558.25641 290.82648 560.31952 291.24466 563.27466 c
291.54193 565.44257 290.50742 567.47992 288.7673 568.57379 c
298.05835 568.57379 l
298.05835 568.11487 l
298.05835 561.3797 292.58441 555.91644 285.83612 555.91644 c
279.09378 555.91644 273.61584 561.37775 273.61584 568.11487 c
273.61584 568.57379 l
283.04364 568.57379 l
282.99213 568.54016 282.94455 568.49072 282.89502 568.45709 c
283.60651 567.74896 283.99692 566.74414 283.84235 565.672 c
283.84235 565.672 l
h
276.95135 578.12567 m
275.58783 579.60919 264.01566 592.7215 279.49411 592.7215 c
293.48419 592.7215 303.54617 581.45068 306.21973 578.12567 c
276.95135 578.12567 l
276.95135 578.12567 l
h
231.84581 666.86365 m
232.76936 679.73267 246.17676 710.55621 258.96185 736.52167 c
262.36871 712.77551 l
261.07452 703.89618 255.12891 669.07904 239.19064 647.12103 c
231.84581 666.86365 l
231.84581 666.86365 l
h
278.38226 445.40631 m
271.52103 464.19949 271.44174 490.49731 271.44174 491.60895 c
271.44769 493.40698 l
270.32394 494.8074 l
260.16882 507.39355 243.10881 529.82434 240.54228 536.4151 c
240.45309 536.67816 l
238.16998 544.60016 242.27841 591.91046 245.39987 619.87183 c
245.53067 621.07642 l
242.08617 630.34149 l
243.39421 631.7182 l
252.1541 640.88037 259.60794 654.07379 265.54962 670.91266 c
269.67587 682.6048 l
271.84802 667.46698 l
286.72797 643.04431 l
290.78091 644.7771 l
290.94342 644.84631 307.99945 652.15112 324.90488 652.15112 c
324.97424 652.15112 l
324.97424 644.04919 l
324.90091 644.04919 l
309.92584 644.04919 294.13821 637.40698 293.97766 637.33575 c
283.45587 632.81403 l
268.77017 656.92017 l
263.79367 645.48718 257.98874 635.96301 251.43468 628.48212 c
253.81096 622.08521 l
253.46611 618.9718 l
249.02472 579.2254 247.05275 544.40826 248.20422 539.10522 c
249.80162 535.42609 257.84409 524.13751 266.66144 512.61157 c
280.42758 516.62695 l
302.00626 541.22168 l
305.39526 477.48389 l
305.18915 477.20697 300.21661 470.23444 300.21661 466.2507 c
300.21661 461.91882 306.58438 456.27753 312.85901 451.75577 c
312.94821 451.93179 312.99774 452.13553 313.09485 452.3017 c
315.31854 456.23004 318.17639 456.94412 319.48642 453.92368 c
320.22168 452.21863 319.99377 447.12323 319.99377 447.12323 c
320.08295 447.07181 l
320.07306 441.03091 l
319.85107 440.52652 314.51984 428.60696 301.39584 428.60696 c
296.31827 428.61093 283.92163 430.24478 278.38226 445.40631 c
278.38226 445.40631 l
h
325.14667 400.99179 m
315.42355 400.99179 301.2254 405.72522 299.80438 418.54477 c
300.33554 418.51709 300.85281 418.47949 301.39386 418.47949 c
302.49777 418.47949 303.58185 418.54477 304.65207 418.65555 c
308.9884 410.27466 316.92386 407.61224 324.97226 407.61224 c
333.01273 407.61224 340.92041 410.30432 345.25082 418.66147 c
346.33096 418.54874 347.43683 418.48148 348.55859 418.48148 c
349.09766 418.48148 349.61691 418.51904 350.14209 418.54675 c
348.74289 405.72522 334.73697 400.99179 325.14667 400.99179 c
325.14667 400.99179 l
h
379.62848 494.8074 m
378.50079 493.40698 l
378.50476 491.60895 l
378.50476 490.49731 378.42548 464.19556 371.56223 445.40631 c
366.02487 430.24478 353.62625 428.60895 348.55859 428.60895 c
335.46234 428.60895 330.08749 440.75598 329.85361 441.26434 c
329.85361 447.05994 l
329.95667 447.12521 l
329.95667 447.12521 329.72479 452.22061 330.4581 453.92566 c
331.77008 456.94611 334.63391 456.23203 336.85361 452.30368 c
336.94675 452.13751 337.00226 451.93179 337.08548 451.75775 c
343.37003 456.27951 349.73383 461.92081 349.73383 466.25269 c
349.73383 470.23245 344.77319 477.18918 344.55914 477.4819 c
347.94815 541.22369 l
369.5209 516.62897 l
391.6228 510.17664 l
387.37961 504.57687 383.10074 499.11157 379.62848 494.8074 c
379.62848 494.8074 l
h
379.62848 494.8074 m
W*
0 0 650 825 rc
213.50578 783.883 m
436.43674 783.883 l
436.43674 331.45291 l
213.50578 331.45291 l
h
f
ep
end
%%Trailer
%%EOF
